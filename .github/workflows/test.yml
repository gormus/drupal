name: Test

on:
  # Trigger the workflow on push or pull requests,
  # but only when targeting the master branch.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os-v }}
    strategy:
      # The first options in each category should match the production.
      # Other jobs in this workflow will use those first options.
      matrix:
        os-v:
          - ubuntu-20.04
        php-v:
          - 7.4
        composer-v:
          - 2
        node-v:
          - 14
    name: ${{ matrix.os-v }} PHP ${{ matrix.php-v }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Composer ${{ matrix.composer-v }}, and PHP ${{ matrix.php-v }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-v }}
          tools: composer:${{ matrix.composer-v }}
          extensions: gd
          coverage: xdebug

      - name: Validate Composer files
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies - Composer ${{ matrix.composer-v }}, PHP ${{ matrix.php }}
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --no-dev

      - name: Tar files
        run: tar -cvf artifact.tar ${{ github.workspace }}

      - name: Upload the TAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-php-${{ matrix.php-v }}-composer-${{ matrix.composer-v }}
          path: artifact.tar

  phpcs:
    needs: build
    runs-on: ${{ matrix.os-v[0] }}
    steps:
      - name: Setup PHP ${{ matrix.php-v[0] }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-v[0] }}
          tools: composer:${{ matrix.composer-v[0] }}
          coverage: xdebug
      - uses: actions/download-artifact@v2
        with:
          name: artifact-php-${{ matrix.php[0] }}-composer-${{ matrix.composer-v[0] }}
      - run: tar -xzvf artifact.tar

      - name: PHP Lint - Syntax check only
        run: php -l ./src

      - name: Run PHP CodeSniffer
        run: ./vendor/bin/phpcs -ps --colors --standard=./phpcs.xml
